{"code": 0, "data": [{"cid": 206660, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 37286, "reply_to": -1, "tag": null, "text": "还有，运气好的话（pq间隔不太大）密钥是可以很快解出来的（所以说破解算法看脸）", "timestamp": 1596431054, "type": "text", "url": ""}, {"cid": 206684, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 37286, "reply_to": -1, "tag": null, "text": "所以随机初始公钥和私钥有可能重复吗", "timestamp": 1596431329, "type": "text", "url": ""}, {"cid": 206717, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 37286, "reply_to": -1, "tag": null, "text": "Re Alice: 不是不可能（相当于$d^2\\equiv 1 mod \\phi(n)$）但这概率也太小了吧……", "timestamp": 1596431616, "type": "text", "url": ""}, {"cid": 206731, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Bob", "pid": 37286, "reply_to": -1, "tag": null, "text": "假如量子计算机造出来了，用Shor算法很快都能破掉", "timestamp": 1596431763, "type": "text", "url": ""}, {"cid": 206907, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Carol", "pid": 37286, "reply_to": -1, "tag": null, "text": "你为什么这么强 我什么都看不懂", "timestamp": 1596434289, "type": "text", "url": ""}, {"cid": 207000, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 37286, "reply_to": -1, "tag": null, "text": "Re Carol: 去看GTM114，跳着看完前两章直接去看第四章第二节，素性检验和质因数分解在第五章有详细讲解。", "timestamp": 1596436090, "type": "text", "url": ""}, {"cid": 207157, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Dave", "pid": 37286, "reply_to": -1, "tag": null, "text": "dznb", "timestamp": 1596439003, "type": "text", "url": ""}, {"cid": 612579, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Eve", "pid": 37286, "reply_to": -1, "tag": null, "text": "Re : 一个笔误：最后一段大概应该是 “他需要计算d，为此...” e是已经知道的数字 不需要计算", "timestamp": 1606301797, "type": "text", "url": ""}], "post": {"deleted": false, "image_metadata": {}, "likenum": 88, "pid": 37286, "reply": 8, "tag": "精品", "text": "今天紫操学姐闹得沸沸扬扬，最近也看了一点密码学的东西，简单讲讲RSA吧。\n\n事件大体是紫操学姐搞事，然后公布公钥给大家加密信息，但是不知为何私钥也被公布出来了导致所有密文大家都能看了。个人观点密钥不是不可能被好事者强行破解得出，毕竟这事有段时间了，你清出一个懂密码学还巨有耐心和好奇心的人不是不可能。\n\n讲讲RSA的工作流程和原理。（RSA是Rivest,Shamir,Adleman的名字缩写）\n\nRSA系统相当于每人有个铁皮邮箱（公钥），人人都可以把信放进去，但只有自己有钥匙（密钥）可以打开邮箱看到信件的内容。\n\n为此，每个参与这一系统的人需要随机选择两个很大但离得不要太近的素数（这并不难，选择一个基准数$m$，根据素数定理，需要扫过$O(\\log m)$个基数找到它，素性检验也可以做到$O(n^{\\frac{1}{4}})$），称之为$p,q$，并记$n=pq$。则其欧拉函数$\\phi(n)=(p-1)(q-1)$。类似地，随机选择一个与$\\phi(n)$互素的数$e$（用$O(\\log^3n)$的欧几里得算法），顺手求出其逆$d$使得$de\\equiv 1 mod \\phi(n)$。\n\n于是作为自己的铁皮邮箱（公钥），参与者甲公布自己的$n,e$作为自己的公钥。乙想要发信息（明文$P$，转换成ASCII码的一串数）给甲，于是他计算（用快速幂可以达到$O(log^3(n))$这也不难）$P^e \\equiv C mod n$得到密文C。这便是把信塞进邮箱的过程。\n\n甲想要重新得到明文$P$，便计算$C^d\\equiv P^{ed} \\equiv P mod n$ ，这便是打开邮箱的方法。\n\n今有丙得到了发给甲的密文$C$，想要得知明文$P$，但是他没有密钥$d$只知道$n,d$，这怎么办？他需要计算$e$，为此需要计算$\\phi(n)$，为此需要指导$p,q$各为多少。但仅从$n$分解得到$p,q$是困难的，用最笨的方法（试每一个因数）的计算量是$O(\\sqrt{n})$，比较看运气的$\\rho$方法（蒙特卡洛算法）是$O(n^{\\frac{1}{4}}log^3n)$，二次筛法是$O(e^{\\sqrt{\\log n\\log\\log n}})$，这虽然费时费力以至于几乎不可能解出，这并不意味着不可能解出密钥。\n（据说已经有多项式时间的算法了，可惜我不懂）", "timestamp": 1596430919, "type": "text", "updated_at": 1627980516, "url": "", "vote": {}}}