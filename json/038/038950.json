{"code": 0, "data": [{"cid": 214046, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 38950, "reply_to": -1, "tag": null, "text": "怀疑就别用呗，好像人家收了你钱才开的树洞", "timestamp": 1596602673, "type": "text", "url": ""}, {"cid": 214051, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Bob", "pid": 38950, "reply_to": -1, "tag": null, "text": "本来后端开源就是无法验证的，难不成还能把服务器后台密码公开了不成", "timestamp": 1596602708, "type": "text", "url": ""}, {"cid": 214053, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 38950, "reply_to": -1, "tag": null, "text": "这一想法的来源是GNU对于AGPL协议（树洞后端采用的开源协议）的一个注解：\n```\nGNU Affero GPL 并没有解决“服务作为软件替代品(SaaSS)”的问题。\n\nSaaSS 的意思是，用户使用其他人的 web 服务器来完成用户自己的计算。这要求他们将数据发送到服务器，服务器为他们进行计算，并将结果发送回给他们。SaaSS 是不公正的，因为用户无法控制其计算过程。\n\n如果这个服务器上的某个程序是在 GNU Affero GPL 下发布的，那么服务器就需要为用户提供相应的源代码。这很好，但是拥有这个源代码并不会让用户控制服务器上的计算。它也不会告诉用户，有什么其它以别的方式检查或更改用户数据的软件可能也运行在同一服务器。\n\n我们没有看到任何合理的方法在特定程序上用许可证条款来解决 SaaSS 问题。甚至写一条区分使用 SaaSS 与否的法律条款也是一种挑战，并且即使我们有这样的许可证，我们也不会看到程序许可证会对能解决 SaaSS 固有问题的 SaaSS 案例作任何要求。因此，我们对 SaaSS 问题的解决方案很简单：拒绝使用SaaSS服务。\n\n如果一个程序是专门针对 SaaSS 的，你不应该写它。但是许多程序对于各种各样的服务是有用的，包括 SaaSS 的和非 SaaSS 的。编写和发行这些程序是很有用的（最好是在 AGPL 下），这样人们就可以用它们建立非 SaaSS 服务。\n```\n当然树洞并不属于一个SaaSS服务（因为树洞的功能是社交而非计算），但是这一可能性还是存在的\n\n以上仅限于技术讨论", "timestamp": 1596602746, "type": "text", "url": ""}, {"cid": 214055, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 38950, "reply_to": -1, "tag": null, "text": "Re Alice: 这当然是最简单的办法，我之所以在用树洞也就是因为我相信树洞的管理层", "timestamp": 1596602780, "type": "text", "url": ""}, {"cid": 214059, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Bob", "pid": 38950, "reply_to": -1, "tag": null, "text": "你用TG的时候，你就真的相信后台一定是他的代码了吗？万一TG维护了一个秘密数据库把所有你的操作都记下来了随时准备卖了呢？（滑稽", "timestamp": 1596602811, "type": "text", "url": ""}, {"cid": 214073, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 38950, "reply_to": -1, "tag": null, "text": "Re Bob: 首先Durov自己实名上网，一旦出卖TG用户隐私会被一瞬谴责\n其次Telegram在全社会有着较大的名气和良好的口碑\n再其次，即使我用TG的时候，我也坚持使用匿名身份并做好身份隔离，尽量避免TG数据库由于各种原因泄露后自己被出卖的可能", "timestamp": 1596602995, "type": "text", "url": ""}, {"cid": 214116, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Bob", "pid": 38950, "reply_to": -1, "tag": null, "text": "Re 洞主: 对，而树洞管理员的保障其实是开源本身。如果这个树洞无法被信任，谁都可以拿他的代码再开一个树洞。", "timestamp": 1596603928, "type": "text", "url": ""}], "post": {"deleted": false, "image_metadata": {}, "likenum": 3, "pid": 38950, "reply": 7, "tag": null, "text": "没有怀疑树洞管理员的意思，只是想到了所以讨论一下：\n我们好像默认了“保存在 https://github.com/thuhole/thuhole-go-backend 的那份代码就是树洞后台的代码”\n但是再仔细一想，这件事情我们好像是无法验证的：\n假如树洞管理员愿意，完全可以维护两份代码：\n一份开源在GitHub上，采用较高的安全等级，但是从来不用；\n另一份留上几个后门然后在 https://thuhole.com/ 使用\n而我们是没法区分这两种情况的", "timestamp": 1596602544, "type": "text", "updated_at": 1606782601, "url": "", "vote": {}}}