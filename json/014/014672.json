{"code": 0, "data": [{"cid": 86520, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 14672, "reply_to": -1, "tag": null, "text": "有salt的…不是直接hash", "timestamp": 1593908811, "type": "text", "url": ""}, {"cid": 86521, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Bob", "pid": 14672, "reply_to": -1, "tag": null, "text": "走好不送", "timestamp": 1593908822, "type": "text", "url": ""}, {"cid": 86524, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 14672, "reply_to": -1, "tag": null, "text": "每个人的邮箱会hash一遍 把结果补位一个很长的随机字符串 然后再hash一遍作为最终id存储 只要不公布salt就没法暴力破解", "timestamp": 1593908887, "type": "text", "url": ""}, {"cid": 86533, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Carol", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Alice: 好，听起来非常安全", "timestamp": 1593909221, "type": "text", "url": ""}, {"cid": 86542, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Dave", "pid": 14672, "reply_to": -1, "tag": null, "text": "这学期了解了hash，但还不懂salt", "timestamp": 1593909391, "type": "text", "url": ""}, {"cid": 86561, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Alice: 但是还是记住了每个人发帖的salt啊", "timestamp": 1593909828, "type": "text", "url": ""}, {"cid": 86579, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re 洞主: salt是统一的 只有超管知道 但如果有一天超管背叛了我们 那就是另一码事了", "timestamp": 1593910049, "type": "text", "url": ""}, {"cid": 86588, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Alice: 除非你说salt本地储存，但是那样还要hash邮箱干啥呢。。。", "timestamp": 1593910168, "type": "text", "url": ""}, {"cid": 86592, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re 洞主: salt在服务器的内存里…每个人的salt都是一样的", "timestamp": 1593910268, "type": "text", "url": ""}, {"cid": 86596, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Eve", "pid": 14672, "reply_to": -1, "tag": null, "text": "hash值理论上有2^256个可能，只能单向运算，即由原数据算出hash值，不能由hash值反向运算出原数据，我们的密码通常就以这种方式加密，每次登陆只需要再做一次hash加密再比对就好了。之所以有人可以破解部分hash值，是因为有人列出了常见数据的hash结果，比如密码123456的hash值是多少，这样简单的密码就会被检索出来并且破解。salt的原理就是我给一个明文的乱码放在原数据背后，这个乱码是随机且公开的，比如123456这个密码，我随便给一个aun6bs加在背后，再进行hash计算，存储，这样每次登陆需要的就是把你输入的密码加上公开的hash进行hash计算、比对。因为salt的存在，即使是简单的密码比如123456，也会被打乱成复杂的数据，这样几乎不可能被别人整理出来的“常见密码hash值”给检索到，所以是十分安全的。", "timestamp": 1593910365, "type": "text", "url": ""}, {"cid": 86598, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Alice: 噗...你们salt又不变，这和假设数据不丢是一个级别的吧，难道你们加salt的代码加了什么混淆的办法保密吗...", "timestamp": 1593910412, "type": "text", "url": ""}, {"cid": 86605, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Eve: 我懂密码学谢谢，你的整个universe只有几万个人的时候，hash值只要和几万个人比一比就知道是谁了", "timestamp": 1593910501, "type": "text", "url": ""}, {"cid": 86608, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re 洞主: 首先…我不是管理员（所以说【你们】是有问题的）其次 salt本身不在代码里明文出现 是服务器启动时手动导入加载的 单纯数据丢了的话 如果不是丢了root权限 是不会丢salt的", "timestamp": 1593910610, "type": "text", "url": ""}, {"cid": 86611, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Eve: 我懂密码学谢谢，你不会真的觉得一个定义域只有几万的函数值域能有2^256吧，建议重修高考数学", "timestamp": 1593910632, "type": "text", "url": ""}, {"cid": 86613, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Alice: 思考，那我要偷salt是应该去用内存溢出之类的攻击骗出来吗", "timestamp": 1593910692, "type": "text", "url": ""}, {"cid": 86615, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Francis", "pid": 14672, "reply_to": -1, "tag": null, "text": "以前讨论过这个问题了hh想要真匿名只要对每个邮箱随机生成一个token并且立即丢弃邮箱就好了吧（这样即使管理员作恶也只能定位到token而不是人", "timestamp": 1593910764, "type": "text", "url": ""}, {"cid": 86616, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Alice: 实在是感觉这个hash容易让人高估它的安全性，其实对超管还是明文嘛", "timestamp": 1593910769, "type": "text", "url": ""}, {"cid": 86617, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Francis: 但是怎么信任超管真的会丢弃邮箱呢", "timestamp": 1593910817, "type": "text", "url": ""}, {"cid": 86633, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re 洞主: 对啊 对超管是明文 但是超管表示完全匿名是违法的 所以…", "timestamp": 1593911251, "type": "text", "url": ""}, {"cid": 86647, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Francis: 这样就没办法禁言了（", "timestamp": 1593911400, "type": "text", "url": ""}, {"cid": 86681, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Alice: 他的设想下可以禁言啊，禁言token就好了", "timestamp": 1593912251, "type": "text", "url": ""}, {"cid": 86786, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Alice", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re 洞主: 那用户要是丢了token申请换怎么办", "timestamp": 1593915146, "type": "text", "url": ""}, {"cid": 86797, "deleted": false, "image_metadata": {}, "is_dz": true, "name": "洞主", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re Alice: 那凉了", "timestamp": 1593915408, "type": "text", "url": ""}, {"cid": 89330, "deleted": false, "image_metadata": {}, "is_dz": false, "name": "Grace", "pid": 14672, "reply_to": -1, "tag": null, "text": "Re : 其实我们讨论的时候都默认了树洞服务器后端用的是和github上开源的一样的代码。但是实际上完全可以在服务器部署的时候把代码中加密的部分删除掉。", "timestamp": 1593949772, "type": "text", "url": ""}], "post": {"deleted": false, "image_metadata": {}, "likenum": 3, "pid": 14672, "reply": 24, "tag": null, "text": "]“T大树洞将会单向加密(i.e. 哈希散列)您的邮箱后再存入数据库。具体可见我们的后端开源代码。”\n\n我麻烦管理员有点常识好不好，清华一共才几万人，要找一个直接把hash值和每个人的hash值一一比对几秒就做完了。", "timestamp": 1593908745, "type": "text", "updated_at": 1606782587, "url": "", "vote": {}}}